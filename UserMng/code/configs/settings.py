"""
Django settings for configs project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os

from pathlib import Path
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
if (os.environ.get("DEBUG") == "False"):
	DEBUG = False
else:
	DEBUG = True

ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS").split(",")

CSRF_TRUSTED_ORIGINS = ["http://localhost:7070"]

# Application definition

INSTALLED_APPS = [
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
    'corsheaders',
	'rest_framework',
	'rest_framework.authtoken',
	'UserMng',
	'rest_framework_simplejwt',
]

SIMPLE_JWT = {
	"ACCESS_TOKEN_LIFETIME" : timedelta(minutes=5),
	"REFRESH_TOKEN_LIFETME" : timedelta(minutes=1),
	"ROTATE_REFRESH_TOKENS" : False,
	"BLACKLIST_AFTER_ROTATION" :  False, #TODO Blacklisting?
	"UPDATE_LAST_LOGIN" : False,#! IF TRUE: TROTHLE
	"ALGORITHM" : 'HS256',
	"SIGNING_KEY" : SECRET_KEY,
	"VERIFYING_KEY" : "",
	"AUDIENCE" : None,
	"ISSUER" :  None,
	"JWK_URL" : None,
	"LEEWAY" : 0,
	"AUTH_HEADER_TYPES" : 'Bearer',
	"AUTH_HEADER_NAME" : 'HTTP_AUTHORIZATION',
	"USER_ID_FIELD": "id",
	"USER_ID_CLAIM" : 'user_id', #WE USE EMAIL, but  should be aware of user_id?
	"USER_AUTHENTICATION_RULE" : 'rest_framework_simplejwt.authentication.default_user_authentication_rule', #MAYBE I MISS SOMETHIMG?
	"AUTH_TOKEN_CLASSES" : ("rest_framework_simplejwttokens.AccessToken",),
	"TOKEN_TYPE_CLAIM" : "token_type",
	"JTI_CLAIM" : 'jti',
	"TOKEN_USER_CLASS" : 'rest_framework_simplejwt.models.TokenUser',
	"TOKEN_OBTAIN_SERIALIZER": "rest_framework_simplejwt.serializers.TokenObtainPairSerializer",
	"TOKEN_REFRESH_SERIALIZER": "rest_framework_simplejwt.serializers.TokenRefreshSerializer",

}

REST_FRAMEWORK = {
	'DEFAULT_AUTHENTICATION_CLASSES': [
		#'rest_framework.authentication.TokenAuthentication',
		'rest_framework_simplejwt.authentication.JWTAuthentication',
	],
}

AUTH_USER_MODEL = 'UserMng.User'
LOGIN_REDIRECT_URL = "/"

MIDDLEWARE = [
	'corsheaders.middleware.CorsMiddleware',
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ORIGIN_ALLOW_ALL = True

ROOT_URLCONF = 'configs.urls'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
]

WSGI_APPLICATION = 'configs.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.{}'.format(os.environ.get('DATABASE_ENGINE')),
		'NAME': os.environ.get('POSTGRES_DB'),
		'USER': os.environ.get('POSTGRES_USER'),
		'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),
		'HOST': os.environ.get('DATABASE_HOST'),
		'PORT': os.environ.get('POSTGRES_PORT'),
	}
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]

API_UID = os.environ.get('API_UID')
API_SECRET = os.environ.get('API_SECRET')

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
MEDIA_URL = 'media/'
MEDIA_ROOT = '/UserMng/code/media'

REDIRECT_URI = os.environ.get('REDIRECT_URI')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
